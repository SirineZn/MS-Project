version: '3.9'

services:
  config-server:
    image: config-server
    container_name: config-server-container
    restart: on-failure
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"

  discovery-server:
    image: discovery-server
    container_name: discovery-server
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"

  event-management-system:
    image: event-management-system
    container_name: event-management-system
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - CONFIG_SERVER:config-server-container
    depends_on:
      - config-server
      - mongodb
      - kafka

  online-store-catalog:
    image: online-store-catalog
    container_name: online-store-catalog
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - CONFIG_SERVER:config-server-container
    depends_on:
      - config-server
      - mysql
      - kafka

  gateway-service:
    image: gateway-service
    container_name: gateway-service
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    depends_on:
      - config-server

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: productdb

  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
